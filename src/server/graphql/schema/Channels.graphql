type Channel {
  id: ID!
  user: User
  activity: Activity
  slug: String
  name: String!
  description: String
}

input ChannelsQueryFilter {
  id: ID
  userId: ID
  activityId: ID
  slug: String
  name: String
  description: String
}

extend type Query {
  channel(id: ID!): Channel
  channels(filter: ChannelsQueryFilter): [Channel]!
}

input CreateChannelInput {
  userId: ID
  activityId: ID
  name: String!
  slug: String
  description: String
}

input UpdateChannelInput {
  id: ID!
  activityId: ID
  name: String
  slug: String
  description: String
}

extend type Mutation {
  createChannel(input: CreateChannelInput): Channel!
    @auth(
      rights: [
        { unit: WRITE, subject: "channels" }
        { unit: SELF, subject: "channels" }
      ]
    )
  updateChannel(input: UpdateChannelInput): Channel!
    @auth(
      rights: [
        { unit: WRITE, subject: "channels" }
        { unit: SELF, subject: "channels" }
      ]
    )
}
