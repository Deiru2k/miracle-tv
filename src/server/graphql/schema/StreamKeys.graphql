type StreamKey {
  id: ID!
  user: User!
  channel: Channel!
}

extend type Query {
  streamKeys: [StreamKey]! @auth(rights: [{ unit: WRITE, subject: "streamKeys" }])
  selfStreamKeys: [StreamKey]! @auth(rights: [{ unit: SELF, subject: "streamKeys" }])
}

input CreateStreamKeyInput {
  userId: ID!
  channelId: ID!
}

extend type Mutation {
  createStreamKey(input: CreateStreamKeyInput): StreamKey! @auth(rights: [{ unit: SELF, subject: "streamKeys" }, { unit: WRITE, subject: "streamKeys" }])
  revokeStreamKey(input: CreateStreamKeyInput): Boolean! @auth(rights: [{ unit: SELF, subject: "streamKeys" }, { unit: WRITE, subject: "streamKeys" }])
}
